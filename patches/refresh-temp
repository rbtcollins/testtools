Bottom: b3a94c68010f4eea8c9cdfa6f5855f1c5bfa899e
Top:    6feed81e2cb7df77dc525b33e69e892a9289d185
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-02-23 22:57:14 +1300

Refresh of stream-to-dict

---

diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index f330357..c94c4c6 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -426,14 +426,21 @@ class StreamToDict(StreamResult):
         super(StreamToDict, self).startTestRun()
         self._inprogress = {}
 
-    def file(self, file_name, file_bytes, eof=False, mime_type=None,
-        test_id=None, route_code=None, timestamp=None):
-        super(StreamToDict, self).file(file_name, file_bytes, eof=eof,
-            mime_type=mime_type, test_id=test_id, route_code=route_code,
-            timestamp=timestamp)
+    def status(self, test_id=None, test_status=None, test_tags=None,
+        runnable=True, file_name=None, file_bytes=None, eof=False,
+        mime_type=None, route_code=None, timestamp=None):
+        super(StreamToDict, self).status(test_id, test_status,
+            test_tags=test_tags, runnable=runnable, file_name=file_name,
+            file_bytes=file_bytes, eof=eof, mime_type=mime_type,
+            route_code=route_code, timestamp=timestamp)
         key = self._ensure_key(test_id, route_code)
-        if key:
-            case = self._inprogress[key]
+        # update fields
+        if not key:
+            return
+        if test_status is not None:
+            self._inprogress[key]['status'] = test_status
+        case = self._inprogress[key]
+        if file_name is not None:
             if file_name not in case['details']:
                 if mime_type is None:
                     mime_type = 'application/octet-stream'
@@ -443,19 +450,10 @@ class StreamToDict(StreamResult):
                 case['details'][file_name] = Content(
                     content_type, lambda:content_bytes)
             case['details'][file_name].iter_bytes().append(file_bytes)
-    
-    def status(self, test_id, test_status, test_tags=None, runnable=True,
-        route_code=None, timestamp=None):
-        super(StreamToDict, self).status(test_id, test_status,
-            test_tags=test_tags, runnable=runnable, route_code=route_code,
-            timestamp=timestamp)
-        key = self._ensure_key(test_id, route_code)
-        # update fields
-        self._inprogress[key]['status'] = test_status
         if test_tags is not None:
             self._inprogress[key]['tags'] = test_tags
         # notify completed tests.
-        if test_status != 'inprogress':
+        if test_status not in (None, 'inprogress'):
             self.on_test(self._inprogress.pop(key))
     
     def stopTestRun(self):
diff --git a/testtools/tests/test_testresult.py b/testtools/tests/test_testresult.py
index b17c0ab..008aa20 100644
--- a/testtools/tests/test_testresult.py
+++ b/testtools/tests/test_testresult.py
@@ -641,10 +641,11 @@ class TestStreamToDict(TestCase):
         tests = []
         result = StreamToDict(tests.append)
         result.startTestRun()
-        result.file("some log.txt", _b("1234 log message"), eof=True,
+        result.status(file_name="some log.txt",
+            file_bytes=_b("1234 log message"), eof=True,
             mime_type="text/plain; charset=utf8", test_id="foo.bar")
-        result.file("another file", _b("""Traceback..."""),
-            test_id="foo.bar")
+        result.status(file_name="another file",
+            file_bytes=_b("""Traceback..."""), test_id="foo.bar")
         result.stopTestRun()
         self.assertThat(tests, HasLength(1))
         test = tests[0]
