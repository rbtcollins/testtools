Bottom: 2920200f27f2cdd733fb357411f6d9a53e723ecf
Top:    8b54a6de9cc623a27b0f03d4689f8e4f9b687b2a
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-02-24 00:18:59 +1300

Refresh of timestamp-stream-result

---

diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index ce308d3..38781ee 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -1453,13 +1453,6 @@ class TimestampingStreamResult(CopyStreamResult):
     def __init__(self, target):
         super(TimestampingStreamResult, self).__init__([target])
 
-    def file(self, *args, **kwargs):
-        timestamp = kwargs.pop('timestamp', None)
-        if timestamp is None:
-            timestamp = datetime.datetime.now(utc)
-        super(TimestampingStreamResult, self).file(
-            *args, timestamp=timestamp, **kwargs)
-
     def status(self, *args, **kwargs):
         timestamp = kwargs.pop('timestamp', None)
         if timestamp is None:
diff --git a/testtools/tests/test_testresult.py b/testtools/tests/test_testresult.py
index dfdc81e..d917ad2 100644
--- a/testtools/tests/test_testresult.py
+++ b/testtools/tests/test_testresult.py
@@ -2605,37 +2605,24 @@ class TestTimestampingStreamResult(TestCase):
         result.stopTestRun()
         self.assertEqual([('stopTestRun',)], result.targets[0]._events)
 
-    def test_file_no_timestamp(self):
-        result = TimestampingStreamResult(LoggingStreamResult())
-        result.file("A", "B", eof="C", mime_type="D", test_id="E", route_code="F")
-        events = result.targets[0]._events
-        self.assertThat(events, HasLength(1))
-        self.assertThat(events[0], HasLength(8))
-        self.assertEqual(
-            ("file", "A", "B", "C", "D", "E", "F"), events[0][:7])
-        self.assertNotEqual(None, events[0][7])
-        self.assertIsInstance(events[0][7], datetime.datetime)
-
-    def test_file_timestamp(self):
-        result = TimestampingStreamResult(LoggingStreamResult())
-        result.file("A", "B", timestamp="F")
-        self.assertEqual("F", result.targets[0]._events[0][7])
-
     def test_status_no_timestamp(self):
         result = TimestampingStreamResult(LoggingStreamResult())
-        result.status("A", "B", test_tags="C", runnable="D", route_code="E")
+        result.status(test_id="A", test_status="B", test_tags="C",
+            runnable="D", file_name="E", file_bytes=b"F", eof=True,
+            mime_type="G", route_code="H")
         events = result.targets[0]._events
         self.assertThat(events, HasLength(1))
-        self.assertThat(events[0], HasLength(7))
+        self.assertThat(events[0], HasLength(11))
         self.assertEqual(
-            ("status", "A", "B", "C", "D", "E"), events[0][:6])
-        self.assertNotEqual(None, events[0][6])
-        self.assertIsInstance(events[0][6], datetime.datetime)
+            ("status", "A", "B", "C", "D", "E", b"F", True, "G", "H"),
+            events[0][:10])
+        self.assertNotEqual(None, events[0][10])
+        self.assertIsInstance(events[0][10], datetime.datetime)
 
     def test_status_timestamp(self):
         result = TimestampingStreamResult(LoggingStreamResult())
-        result.status("A", "B", timestamp="F")
-        self.assertEqual("F", result.targets[0]._events[0][6])
+        result.status(timestamp="F")
+        self.assertEqual("F", result.targets[0]._events[0][10])
 
 
 def test_suite():
