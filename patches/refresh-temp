Bottom: 878ab330f2375cf3760cd8e181098ee917695324
Top:    73da618464d06661ec8b0936a9a17ad7237e34cb
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-02-16 14:22:18 +1300

Refresh of define-stream-result

---

diff --git a/NEWS b/NEWS
index 0c6b7f5..4387557 100644
--- a/NEWS
+++ b/NEWS
@@ -6,6 +6,16 @@ Changes and improvements to testtools_, grouped by release.
 NEXT
 ~~~~
 
+A new sort of TestResult, the StreamResult has been added, as a prototype for
+a revised standard library test result API. The API is not stable yet, though
+we will endeavour to preserve compatibility for early adopters.
+
+Improvements
+------------
+
+* New class ``StreamResult`` which defines the API for the new result type.
+  (Robert Collins)
+
 0.9.29
 ~~~~~~
 
diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index 3e6cb33..5a53c20 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -349,8 +349,12 @@ class StreamResult(object):
           they start running and at any intermediary point they might choose to
           indicate their continual operation.
         * xfail - the test failed but that was expected.
-        * xsuccess - the test passed but was expected to fail.
-        * success - the test succeeded.
+        * uxsuccess - the test passed but was expected to fail. Like finish,
+          this must be the last event sent for this test.
+        * finish - the test has finished. If no error status had been reported,
+          it can now be considered a success, otherwise it should be considered
+          a failure. This must be the last event sent for this test (including
+          file events).
         * fail - the test failed (or errored)
         * skip - the test was selected to run but chose to be skipped. E.g.
           a test dependency was missing.
diff --git a/testtools/tests/test_testresult.py b/testtools/tests/test_testresult.py
index 7746420..21f15fd 100644
--- a/testtools/tests/test_testresult.py
+++ b/testtools/tests/test_testresult.py
@@ -491,7 +491,7 @@ class TestStreamResultContract(object):
         self.addCleanup(result.stopTestRun)
         now = datetime.datetime.now(utc)
         args = [[_u("foo"), s] for s in ['exists', 'inprogress', 'xfail',
-            'xsuccess', 'success', 'fail', 'skip']]
+            'uxsuccess', 'finish', 'fail', 'skip']]
         inputs = list(dict(
             runnable=False,
             test_tags=set(['quux']),
