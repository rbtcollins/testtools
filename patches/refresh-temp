Bottom: f3cb66112e35dfb3fb7ce2d5156ccb087e498c47
Top:    89b726063ff9f6d280dfb08173ac26994ba4ad5c
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-02-17 22:47:20 +1300

Refresh of stream-summary

---

diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index fe49701..a01d843 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -518,8 +518,7 @@ class StreamSummary(StreamResult):
         called, so that should be called before checking wasSuccessful.
         """
         return (not self.failures and
-            not self.errors and
-            not self.expectedFailures and not self.unexpectedSuccesses)
+            not self.errors)
 
 
 class MultiTestResult(TestResult):
diff --git a/testtools/tests/test_testresult.py b/testtools/tests/test_testresult.py
index 183b184..be57648 100644
--- a/testtools/tests/test_testresult.py
+++ b/testtools/tests/test_testresult.py
@@ -671,8 +671,7 @@ class TestStreamSummary(TestCase):
 
     def test_wasSuccessful(self):
         # wasSuccessful returns False if any of
-        # failures/errors/expectedFailures/unexpectedSuccesses is
-        # non-empty.
+        # failures/errors is non-empty.
         result = StreamSummary()
         result.startTestRun()
         self.assertEqual(True, result.wasSuccessful())
@@ -686,10 +685,10 @@ class TestStreamSummary(TestCase):
         self.assertEqual(True, result.wasSuccessful())
         result.startTestRun()
         result.expectedFailures.append('x')
-        self.assertEqual(False, result.wasSuccessful())
+        self.assertEqual(True, result.wasSuccessful())
         result.startTestRun()
         result.unexpectedSuccesses.append('x')
-        self.assertEqual(False, result.wasSuccessful())
+        self.assertEqual(True, result.wasSuccessful())
 
     def test_stopTestRun(self):
         result = StreamSummary()
