Bottom: a5b747c8ae38872ef60924bec6993606b81ae525
Top:    5086ad84b5ca92ab9a8d6629ae4073655c1fb242
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-02-19 22:17:25 +1300

Refresh of threadsafestreamresult

---

diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index 2833a45..dd2eb62 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -659,14 +659,6 @@ class ThreadsafeStreamResult(StreamResult):
         self.semaphore = semaphore
         self.routing_code = routing_code
 
-    def estimate(self, count, route_code=None, timestamp=None):
-        self.semaphore.acquire()
-        try:
-            self.result.estimate(count, route_code=self.route_code(route_code),
-                timestamp=timestamp)
-        finally:
-            self.semaphore.release()
-
     def file(self, file_name, file_bytes, eof=False, mime_type=None,
         test_id=None, route_code=None, timestamp=None):
         self.semaphore.acquire()
diff --git a/testtools/tests/test_testresult.py b/testtools/tests/test_testresult.py
index 1c60b38..0994b99 100644
--- a/testtools/tests/test_testresult.py
+++ b/testtools/tests/test_testresult.py
@@ -1603,21 +1603,6 @@ class TestThreadStreamResult(TestCase):
         return (ThreadsafeStreamResult(target, semaphore, "foo"),
             semaphore)
 
-    def test_estimate(self):
-        class CallbackStream(object):
-            def estimate(stream, count, route_code=None, timestamp=None):
-                self.assertFalse(semaphore.acquire(False))
-                self.assertEqual(2, count)
-                self.assertEqual(expected_route, route_code)
-                self.assertEqual(expected_time, timestamp)
-        result, semaphore = self.make_result(CallbackStream())
-        expected_route = "foo"
-        expected_time = None
-        result.estimate(2, route_code=None, timestamp=None)
-        expected_route = "foo/bar"
-        expected_time = datetime.datetime.now(utc)
-        result.estimate(2, route_code="bar", timestamp=expected_time)
-
     def test_file(self):
         class CallbackStream(object):
             def file(stream, file_name, file_bytes, eof=False, mime_type=None,
