Bottom: 7a8164fd550429fcd4070702b99a5d31ed8fe0de
Top:    98f904627cc6522e0ceae75b07d539c76f92a424
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-02-27 21:50:16 +1300

Refresh of stream-to-dict

---

diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index 913268a..fae48a2 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -407,6 +407,10 @@ class StreamToDict(StreamResult):
         objects.
     * status: One of the StreamResult status codes (including inprogress) or
         'unknown' (used if only file events for a test were received...)
+    * timestamps: A pair of timestamps - the first one received with this
+      test id, and the one in the event that triggered the notification.
+      Hung tests have a None for the second end event. Timestamps are not
+      compared - their ordering is purely order received in the stream.
 
     Only the most recent tags observed in the stream are reported.
     """
@@ -433,12 +437,13 @@ class StreamToDict(StreamResult):
             test_tags=test_tags, runnable=runnable, file_name=file_name,
             file_bytes=file_bytes, eof=eof, mime_type=mime_type,
             route_code=route_code, timestamp=timestamp)
-        key = self._ensure_key(test_id, route_code)
+        key = self._ensure_key(test_id, route_code, timestamp)
         # update fields
         if not key:
             return
         if test_status is not None:
             self._inprogress[key]['status'] = test_status
+        self._inprogress[key]['timestamps'][1] = timestamp
         case = self._inprogress[key]
         if file_name is not None:
             if file_name not in case['details']:
@@ -466,9 +471,11 @@ class StreamToDict(StreamResult):
     def stopTestRun(self):
         super(StreamToDict, self).stopTestRun()
         while self._inprogress:
-            self.on_test(self._inprogress.popitem()[1])
+            case = self._inprogress.popitem()[1]
+            case['timestamps'][1] = None
+            self.on_test(case)
 
-    def _ensure_key(self, test_id, route_code):
+    def _ensure_key(self, test_id, route_code, timestamp):
         if test_id is None:
             return
         key = (test_id, route_code)
@@ -477,7 +484,8 @@ class StreamToDict(StreamResult):
                 'id': test_id,
                 'tags': set(),
                 'details': {},
-                'status': 'unknown'}
+                'status': 'unknown',
+                'timestamps': [timestamp, None]}
         return key
 
 
diff --git a/testtools/tests/test_testresult.py b/testtools/tests/test_testresult.py
index 55f946c..31157d4 100644
--- a/testtools/tests/test_testresult.py
+++ b/testtools/tests/test_testresult.py
@@ -617,7 +617,8 @@ class TestStreamToDict(TestCase):
         self.assertEqual([], tests)
         result.stopTestRun()
         self.assertEqual([
-            {'id': 'foo', 'tags': set(), 'details': {}, 'status': 'inprogress'}
+            {'id': 'foo', 'tags': set(), 'details': {}, 'status': 'inprogress',
+             'timestamps': [None, None]}
             ], tests)
 
     def test_all_terminal_states_reported(self):
@@ -679,6 +680,18 @@ class TestStreamToDict(TestCase):
             "text/plain; charset=\"utf8\"",
             repr(details['file'].content_type))
 
+    def test_timestamps(self):
+        tests = []
+        result = StreamToDict(tests.append)
+        result.startTestRun()
+        result.status(test_id='foo', test_status='inprogress', timestamp="A")
+        result.status(test_id='foo', test_status='success', timestamp="B")
+        result.status(test_id='bar', test_status='inprogress', timestamp="C")
+        result.stopTestRun()
+        self.assertThat(tests, HasLength(2))
+        self.assertEqual(["A", "B"], tests[0]['timestamps'])
+        self.assertEqual(["C", None], tests[1]['timestamps'])
+
 
 class TestTestResult(TestCase):
     """Tests for 'TestResult'."""
