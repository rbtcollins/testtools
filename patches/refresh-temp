Bottom: e01b7178a8e28b2545a95aa972faf1bfad76b694
Top:    f43eeca1dd7218d0e04fc7be1b4a4a20e0b26e3e
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-04-03 10:45:14 +1300

Refresh of streamresult-router

---

diff --git a/testtools/tests/test_testresult.py b/testtools/tests/test_testresult.py
index 274c189..04dc7ce 100644
--- a/testtools/tests/test_testresult.py
+++ b/testtools/tests/test_testresult.py
@@ -1736,30 +1736,30 @@ class TestStreamResultRouter(TestCase):
             ],
             fallback._events)
 
-    def test_map_bad_policy(self):
+    def test_add_rule_bad_policy(self):
         router = StreamResultRouter()
         target = LoggingStreamResult()
-        self.assertRaises(ValueError, router.map, target, 'route_code_prefixa',
+        self.assertRaises(ValueError, router.add_rule, target, 'route_code_prefixa',
             route_prefix='0')
 
-    def test_map_extra_policy_arg(self):
+    def test_add_rule_extra_policy_arg(self):
         router = StreamResultRouter()
         target = LoggingStreamResult()
-        self.assertRaises(TypeError, router.map, target, 'route_code_prefix',
+        self.assertRaises(TypeError, router.add_rule, target, 'route_code_prefix',
             route_prefix='0', foo=1)
 
-    def test_map_missing_prefix(self):
+    def test_add_rule_missing_prefix(self):
         router = StreamResultRouter()
         target = LoggingStreamResult()
-        self.assertRaises(TypeError, router.map, target, 'route_code_prefix')
+        self.assertRaises(TypeError, router.add_rule, target, 'route_code_prefix')
 
-    def test_map_slash_in_prefix(self):
+    def test_add_rule_slash_in_prefix(self):
         router = StreamResultRouter()
         target = LoggingStreamResult()
-        self.assertRaises(TypeError, router.map, target, 'route_code_prefix',
+        self.assertRaises(TypeError, router.add_rule, target, 'route_code_prefix',
             route_prefix='0/')
 
-    def test_map_route_code_consume_False(self):
+    def test_add_rule_route_code_consume_False(self):
         fallback = LoggingStreamResult()
         target = LoggingStreamResult()
         router = StreamResultRouter(fallback)
@@ -1780,7 +1780,7 @@ class TestStreamResultRouter(TestCase):
             ],
             fallback._events)
 
-    def test_map_route_code_consume_True(self):
+    def test_add_rule_route_code_consume_True(self):
         fallback = LoggingStreamResult()
         target = LoggingStreamResult()
         router = StreamResultRouter(fallback)
@@ -1802,7 +1802,7 @@ class TestStreamResultRouter(TestCase):
             ],
             fallback._events)
 
-    def test_map_test_id(self):
+    def test_add_rule_test_id(self):
         nontest = LoggingStreamResult()
         test = LoggingStreamResult()
         router = StreamResultRouter(test)
@@ -1816,7 +1816,7 @@ class TestStreamResultRouter(TestCase):
             ('status', None, None, None, True, 'bar', b'', False, None, None,
              None),], nontest._events)
 
-    def test_map_do_start_stop_run(self):
+    def test_add_rule_do_start_stop_run(self):
         nontest = LoggingStreamResult()
         router = StreamResultRouter()
         router.add_rule(nontest, 'test_id', test_id=None, do_start_stop_run=True)
@@ -1827,7 +1827,7 @@ class TestStreamResultRouter(TestCase):
             ('stopTestRun',),
             ], nontest._events)
 
-    def test_map_do_start_stop_run_after_startTestRun(self):
+    def test_add_rule_do_start_stop_run_after_startTestRun(self):
         nontest = LoggingStreamResult()
         router = StreamResultRouter()
         router.startTestRun()
