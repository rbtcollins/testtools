Bottom: eb742682b60bc1d3dac95696ed80d55db9bc4617
Top:    6d11dd08dca898e4134a858e4aa3a5e214d3c86d
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-02-18 23:58:33 +1300

Refresh of stream-to-extended-result

---

diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index 99daa54..ea892bc 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -1265,10 +1265,31 @@ class StreamToExtendedDecorator(StreamResult):
 
     def __init__(self, decorated):
         self.decorated = ExtendedToOriginalDecorator(decorated)
+        self.hook = StreamToDict(self._handle_tests)
 
     def estimate(self, *args, **kwargs):
         """Not passed on."""
 
+    def file(self, *args, **kwargs):
+        self.hook.file(*args, **kwargs)
+
+    def status(self, test_id, test_status, *args, **kwargs):
+        if test_status == 'exists':
+            return
+        self.hook.status(test_id, test_status, *args, **kwargs)
+
+    def startTestRun(self):
+        self.decorated.startTestRun()
+        self.hook.startTestRun()
+
+    def stopTestRun(self):
+        self.hook.stopTestRun()
+        self.decorated.stopTestRun()
+
+    def _handle_tests(self, test_dict):
+        case = test_dict_to_case(test_dict)
+        case.run(self.decorated)
+
 
 class TestResultDecorator(object):
     """General pass-through decorator.
