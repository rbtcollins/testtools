Bottom: 9d9568d14f9d19bed057e5e6cfbbdc9bc5039116
Top:    4e8ecc8b26fe7ab707a793b24a25d5d683e65f7a
Author: Robert Collins <robertc@robertcollins.net>
Date:   2013-03-16 19:45:05 +1300

Add IncompleteTestDetector, for detecting incomplete tests.


---

diff --git a/NEWS b/NEWS
index 7cc1d41..e08c6a6 100644
--- a/NEWS
+++ b/NEWS
@@ -34,6 +34,10 @@ Improvements
   ``StreamResult`` objects (each of which receives all the events).
   (Robert Collins)
 
+* New support class ``IncompleteTestDetector`` which tracks tests that have
+  emitted output but not completed, and synthesises a ``fail`` event for them
+  when ``stopTestRun`` is called. (Robert Collins)
+
 * New support class ``StreamSummary`` which summarises a ``StreamResult``
   stream compatibly with ``TestResult`` code. (Robert Collins)
 
diff --git a/doc/for-framework-folk.rst b/doc/for-framework-folk.rst
index f052e4e..2629878 100644
--- a/doc/for-framework-folk.rst
+++ b/doc/for-framework-folk.rst
@@ -199,6 +199,17 @@ A ``StreamResult`` filter that adds or removes tags from events::
     >>> # Run tests against result here.
     >>> result.stopTestRun()
 
+IncompleteTestDetector
+----------------------
+
+This ``StreamResult`` filter tracks tests that have emitted events but not
+completed (whether with an error or not). When ``stopTestRun`` is called, these
+outstanding tests have a ``fail`` event generated. This is useful to permit
+analysers of streams to assume that all tests will complete - as long as there
+is an ``IncompleteTestDetector`` in the processing chain within a single
+process, code can allow it to be responsible for detecting hung or crashed
+tests.
+
 StreamToDict
 ------------
 
diff --git a/testtools/__init__.py b/testtools/__init__.py
index 94e526f..2e88d43 100644
--- a/testtools/__init__.py
+++ b/testtools/__init__.py
@@ -13,6 +13,7 @@ __all__ = [
     'ExtendedToOriginalDecorator',
     'ExtendedToStreamDecorator',
     'FixtureSuite',
+    'IncompleteTestDetector',
     'iterate_tests',
     'MultipleExceptions',
     'MultiTestResult',
@@ -82,6 +83,7 @@ else:
         CopyStreamResult,
         ExtendedToOriginalDecorator,
         ExtendedToStreamDecorator,
+        IncompleteTestDetector,
         MultiTestResult,
         StreamFailFast,
         StreamResult,
diff --git a/testtools/testresult/__init__.py b/testtools/testresult/__init__.py
index 5bf8f9c..6899bb1 100644
--- a/testtools/testresult/__init__.py
+++ b/testtools/testresult/__init__.py
@@ -6,6 +6,7 @@ __all__ = [
     'CopyStreamResult',
     'ExtendedToOriginalDecorator',
     'ExtendedToStreamDecorator',
+    'IncompleteTestDetector',
     'MultiTestResult',
     'StreamFailFast',
     'StreamResult',
@@ -29,6 +30,7 @@ from testtools.testresult.real import (
     CopyStreamResult,
     ExtendedToOriginalDecorator,
     ExtendedToStreamDecorator,
+    IncompleteTestDetector,
     MultiTestResult,
     StreamFailFast,
     StreamResult,
diff --git a/testtools/testresult/real.py b/testtools/testresult/real.py
index 41b9d63..8fa4875 100644
--- a/testtools/testresult/real.py
+++ b/testtools/testresult/real.py
@@ -6,6 +6,7 @@ __metaclass__ = type
 __all__ = [
     'ExtendedToOriginalDecorator',
     'ExtendedToStreamDecorator',
+    'IncompleteTestDetector',
     'MultiTestResult',
     'StreamFailFast',
     'StreamResult',
@@ -408,6 +409,14 @@ class CopyStreamResult(StreamResult):
         domap(methodcaller('status', *args, **kwargs), self.targets)
 
 
+class IncompleteTestDetector(CopyStreamResult):
+    """Detect tests that are incomplete when stopTestRun is called.
+
+    Such tests have a ``fail`` result generated and forwarded before
+    the ``stopTestRun`` event is forwarded.
+    """
+
+    
 class StreamFailFast(StreamResult):
     """Call the supplied callback if an error is seen in a stream.
